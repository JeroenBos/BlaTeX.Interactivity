name: CI
on: [push]
jobs:
  build:
    name: Build, lint, and test on Node ${{ matrix.node }} and ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ['14.x']
        os: [windows-latest, ubuntu-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Ensure latest chrome version is installed (docker image can be out-of-date) (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }} 
        run: |
            sudo curl -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add 
            sudo bash -c "echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' >> /etc/apt/sources.list.d/google-chrome.list" 
            sudo apt -y update
            sudo apt list -a google-chrome-stable
            sudo apt -y install google-chrome-stable=96.0.4664.45-1
            google-chrome --version
      - name: Ensure latest chrome version is installed (docker image can be out-of-date) (Windows)
        if: ${{ matrix.os == 'windows-latest' }} 
        run: |
            wmic product where "name like 'Google Chrome'" call uninstall /nointeractive     # uninstall default version
            choco install googlechrome -y --version=96.0.4664.45 --ignore-checksums          # install
            choco pin add -n=googlechrome --version=96.0.4664.45                             # not sure if it works. TODO: https://github.com/chocolatey/choco/issues/798
            (Get-Item "C:\Program Files\Google\Chrome\Application\chrome.exe").VersionInfo   # print version

      - name: download LayoutEngine
        run: bash .github/workflows/Download_LayoutEngine.sh

      - name: Install deps and build (with cache)
        uses: bahmutov/npm-install@v1

      - name: Test
        run: yarn test --ci --maxWorkers=1 --silent=false
        timeout-minutes: 3
        
      - name: Lint
        run: yarn lint

      - name: Build
        run: yarn build
